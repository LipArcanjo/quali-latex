%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% INSERINDO COMENTÁRIOS EM ARQUIVOS .bib %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% 1. Como em outros arquivos LaTeX, comentários são iniciados por "%" e,
%    portanto, é preciso usar "\%" para imprimir o caractere "%". Esquecer
%    disso pode gerar erros difíceis de encontrar!
%
% 2. Não é possível inserir comentários dentro de uma entrada, apenas fora.
%
% 3. Não é possível incluir o caractere arroba em um comentário.
%
% 4. Se quiser desabilitar temporariamente um campo ("comentar" o campo),
%    troque seu nome para algum nome inválido, como "author-disable".
%    Se quiser fazer alguma observação permanente dentro de uma entrada,
%    você também pode usar algum nome de campo inválido, como "lembrete",
%    ou usar o campo "annotation", que normalmente é ignorado.
%
% 5. Se quiser desabilitar temporariamente uma entrada inteira ("comentar" a
%    entrada), não basta colocar "%" nas linhas correspondentes por causa do
%    caractere arroba; também é preciso remover a arroba.
%
% 6. Na verdade, as regras não são bem essas, mas segui-las é uma boa ideia:
%    https://tex.stackexchange.com/a/262282
%
% Por exemplo, esta entrada está comentada, ou seja, não tem efeito: se
% houvesse uma referência a ela no texto, a referência ficaria inválida.
% Observe que, para isso, o caractere arroba foi apagado!
%
%Book{JW82,
% author    = {Richard A. Johnson and Dean W. Wichern},
% title     = {Applied Multivariate Statistical Analysis},
% publisher = {Prentice-Hall},
% year      = {1983}
%}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% O CAMPO "MONTH" %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% biblatex prefere o uso do campo "date" para definir ano, mês etc. No
% entanto, se você quiser garantir compatibilidade tanto com biblatex
% quanto com bibtex, use os campos "year" e "month". Ambos reconhecem
% diversos formatos para o campo "month", mas apenas um funciona
% corretamente com os dois: o nome do mês em inglês, abreviado com três
% letras minúsculas e sem chaves, ou seja:
%
% ...
% author = {Somebody},
% year = {2011},
% month = oct,
% title = {Some title},
% ...


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Esta entrada não está em uso em tese.tex, apenas em
% apresentacao.tex, mas isso não é um problema: você pode
% ter um banco de dados com todos os papers que são de seu
% interesse e, em um dado texto, citar apenas alguns deles.
@Manual{CORBA:spec,
 title       = {{CORBA} v3.0 Specification},
 author      = {{Object Management Group}},
 shortauthor = {OMG},
 month       = jul,
 year        = {2002},
 note        = {OMG Document 02-06-33}
}

@Book{eco:09,
 author   = {Umberto Eco},
 title    = {Como se Faz uma Tese},
 edition  = 22,
 publisher= {Perspectiva},
 note     = {Tradução Gilson Cesar Cardoso de Souza},
 year     = {2009},
}

@Book{zobel:04,
 author   = {Justin Zobel},
 title    = {Writing for Computer Science: The Art of Effective Communication},
 publisher= {Springer},
 edition  = 2,
 year     = {2004},
}

@Book{waz:09,
 author   = {Raul S. Wazlawick},
 title    = {Metodologia de Pesquisa em Ciência da Computação},
 publisher= {Campus},
 edition  = 1,
 year     = {2009},
}

@Book{Higham:98,
 author   = {Nicholas J. Higham},
 title    = {Handbook of Writing for the Mathematical Sciences},
 edition  = 2,
 publisher= {SIAM: Society for Industrial and Applied Mathematics},
 month    = aug,
 year     = {1998},
}

@book{Knuth:96,
 author   = {Donald E. Knuth and Tracy Larrabee and Paul M. Roberts},
 title    = {Mathematical Writing},
 publisher= {The Mathematical Association of America},
 month    = sep,
 year     = {1996}
}

@InProceedings{alves03:simi,
 author   = {Carlos E. R. Alves and Edson N. Cáceres and Frank Dehne and Siang W. Song},
 title    = {A Parallel Wavefront Algorithm for Efficient Biological Sequence Comparison},
 booktitle= {ICCSA'03: The 2003 International Conference on Computational Science and its Applications},
 year     = {2003},
 pages    = {249-258},
 month    = may,
 publisher= {Springer-Verlag}
}

@Article{MenaChalco08,
 author   = {Jesús P. Mena-Chalco and Helaine Carrer and Yossi Zana and Roberto M. Cesar-Jr.},
 title    = {Identification of Protein Coding Regions Using the Modified {G}abor-Wavelet Transform},
 journal  = {IEEE/ACM Transactions on Computational Biology and Bioinformatics},
 volume   = {5},
 pages    = {198-207},
 year     = {2008},
}

@Article{floats2014,
 author    = {Frank Mittelbach},
 title     = {How to influence the position of float environments like figure and table in {\LaTeX}?},
 journal   = {{TUGboat}},
 journalsubtitle = {Communications of the \TeX\ Users Group},
 volume    = {35},
 number    = {3},
 year      = 2014,
 url       = {tug.org/TUGboat/tb35-3/tb111mitt-float.pdf},
 urldate   = {2020-01-09},
 publisher = {\TeX\ {Users} {Group}},
 address   = {Portland ({OR}), {USA}},
}

@Techreport{alvisi99:analysisCIC,
 author      = {Lorenzo Alvisi and Elmootazbellah Elnozahy and Sriram S. Rao and Syed A. Husain and Asanka Del Mel},
 title       = {An Analysis of Comunication-Induced Checkpointing},
 institution = {Department of Computer Science, University of Texas at Austin},
 year        = {1999},
 number      = {TR-99-01},
 address     = {Austin, USA}
}

@Misc{gridftp,
 author   = {William Allcock},
 title    = {{GridFTP} Protocol Specification. {Global Grid Forum} Recommendation ({GFD}.20)},
 year     = {2003}
}

% A entrada "year" eh usada por bibtex;
% biblatex pode usar "year" ou "date"
@Manual{natbib,
 title       = "Reference sheet for \texttt{natbib} usage",
 author      = "Patrick W. Daly",
 year        = {2010},
 date        = {2010-09-13},
 urldate     = {2018-12-20},
 url         = {mirrors.ctan.org/macros/latex/contrib/natbib/natnotes.pdf},
}

@Manual{biblatex,
 title       = "The \texttt{biblatex} Package",
 author      = "Philipp Lehman and Philip Kime and Moritz Wemheuer and Audrey Boruvka and Joseph Wright",
 year        = 2018,
 date        = {2018-10-30},
 urldate     = {2018-12-20},
 url         = {mirrors.ctan.org/macros/latex/contrib/biblatex/doc/biblatex.pdf},
}

@PhdThesis{garcia01:PhD,
 author   = {Islene C. Garcia},
 title    = {Visões Progressivas de Computações Distribuídas},
 school   = {Instituto de Computação, Universidade de Campinas},
 address  = {Campinas, Brasil},
 year     = {2001},
 month    = dec
}

@Conference{bronevetsky02,
 author     = {Greg Bronevetsky and Daniel Marques and Keshav Pingali and Paul Stodghill},
 title      = {Automated Application-Level Checkpointing of {MPI} Programs},
 booktitle  = {PPoPP'03: Proceedings of the 9th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
 year       = {2003},
 pages      = {84-89},
 eventdate  = {2003-06-11/2003-06-13},
 venue      = {San Diego, California}
}

@InCollection{bobaoglu93:concepts,
 author   = {Ozalp Babaoglu and Keith Marzullo},
 title    = {Consistent Global States of Distributed Systems: Fundamental Concepts and Mechanisms},
 editor   = {Sape Mullender},
 booktitle= {Distributed Systems},
 edition  = 2,
 year     = {1993},
 pages    = {55-96}
}

@MastersThesis{schmidt03:MSc,
 author   = {Rodrigo M. Schmidt},
 title    = {Coleta de Lixo para Protocolos de \emph{Checkpointing}},
 school   = {Instituto de Computação, Universidade de Campinas},
 address  = {Campinas, Brasil},
 year     = {2003},
 month    = oct
}

@online{fowler04:designDead,
 author   = {Martin Fowler},
 title    = {Is Design Dead?},
 year     = {2004},
 month    = may,
 urldate  = {2010-01-30},
 url      = {martinfowler.com/articles/designDead.html},
}

@online{FSF:GNU-GPL,
 author      = {{Free Software Foundation}},
 shortauthor = {FSF},
 title       = {{GNU} General Public License},
 year        = 2007,
 urldate     = {2010-01-30},
 url         = {www.gnu.org/copyleft/gpl.html},
}

@article{alon09:how,
 author   = {Uri Alon},
 title    = {How To Choose a Good Scientific Problem},
 journal  = {Molecular Cell},
 year     = {2009},
 volume   = {35},
 number   = {6},
 pages    = {726--728},
 publisher= {Cell Press},
 month    = sep,
 doi      = {10.1016/j.molcel.2009.09.013},
}

@book{tufte01:visualDisplay,
 author   = {Edward Tufte},
 title    = {The Visual Display of Quantitative Information},
 year     = {2001},
 edition  = 2,
 publisher= {Graphics Press},
 month    = may,
}

@Manual{usp:guidelines,
 author      = {{Universidade de São Paulo --- Sistema Integrado de Bibliotecas}},
 shortauthor = {SIBiUSP},
 title       = {Diretrizes para Apresentação de
	        Dissertações e Teses da {USP}:
	        Documento Eletrônico e Impresso},
 year        = 2009,
 url         = {www.teses.usp.br/index.php?option=com_content&view=article&id=52&Itemid=67},
 urldate     = {2017-11-10},
}

@online{carlis:09,
 author  = {John V. Carlis},
 title   = {Design: The Key to Writing
            (and Advising) a One-Draft {Ph.D} Dissertation},
 year    = 2009,
 url     = {www-users.cs.umn.edu/~carlis/one-draft.pdf},
 urldate = {2017-11-10},
}

@book{craftresearch,
 author    = {Wayne C. Booth and Gregory G. Colomb and Joseph M. Williams},
 title     = {The Craft of Research},
 publisher = {The University of Chicago Press},
 year      = 2008,
}

@book{dissertjourney,
 author    = {Carol M. Roberts},
 title     = {The Dissertation Journey},
 publisher = {Corwin},
 year      = 2010,
 edition   = 2,
 location  = {Thousand Oaks, CA},
}

@manual{sbctemplate,
 author  = {Luciana P. Nedel and Rafael H. Bordini and Flávio Rech Wagner and Jomi F. H\"{u}bner},
 title   = {Instructions for Authors of {SBC} Conferences Papers and Abstracts},
 year    = 2017,
 url     = {www.sbc.org.br/documentos-da-sbc/category/169-templates-para-artigos-e-capitulos-de-livros},
 urldate = {2018-12-13},
}

@article{litreview,
 author = {Chen, Chang-Feng and Zain, Azlan and Zhou, Kai-Qing},
 year = {2022},
 month = {08},
 pages = {1-31},
 title = {Definition, approaches, and analysis of code duplication detection (2006–2020): a critical review},
 volume = {34},
 journal = {Neural Computing and Applications},
 doi = {10.1007/s00521-022-07707-2}
}

@article{firstman,
 author = {H.T. Jankowitz},
 year = {1988},
 pages = {1-8},
 title = {Detecting plagiarism in student PASCAL programs},
 journal = {Computer Journal},
 volume = {31}
}

@article{harmone,
 author = {Hordijk, Wiebe and Ponisio, Maria Laura and Wieringa, Roel},
 title = {Harmfulness of code duplication: a structured review of the evidence},
 year = {2009},
 publisher = {BCS Learning \& Development Ltd.},
 address = {Swindon, GBR},
 booktitle = {Proceedings of the 13th International Conference on Evaluation and Assessment in Software Engineering},
 pages = {88–97},
 keywords = {changeability, clones, duplication, maintainability, structured review},
 location = {UK},
 series = {EASE'09}
}

@article{harmtwo,
author = {Hotta, Keisuke and Sasaki, Yui and Sano, Yukiko and Higo, Yoshiki and Kusumoto, Shinji},
title = {An empirical study on the impact of duplicate code},
year = {2012},
publisher = {Hindawi Limited},
address = {London, GBR},
volume = {2012},
issn = {1687-8655},
url = {https://doi.org/10.1155/2012/938296},
doi = {10.1155/2012/938296},
abstract = {It is said that the presence of duplicate code is one of the factors that make software maintenance more difficult. Many research efforts have been performed on detecting, removing, or managing duplicate code on this basis. However, some researchers doubt this basis in recent years and have conducted empirical studies to investigate the influence of the presence of duplicate code. In this study, we conduct an empirical study to investigate this matter from a different standpoint from previous studies. In this study, we define a new indicator "modification frequency" tomeasure the impact of duplicate code and compare the values between duplicate code and nonduplicate code. The features of this study are as follows the indicator used in this study is based on modification places instead of the ratio of modified lines; we use multiple duplicate code detection tools to reduce biases of detection tools; and we compare the result of the proposed method with other two investigation methods. The result shows that duplicate code tends to be less frequently modified than nonduplicate code, and we found some instances that the proposed method can evaluate the influence of duplicate code more accurately than the existing investigation methods.},
journal = {Adv. Soft. Eng.},
month = {jan},
}

@inproceedings{textexample,
author = {Roy, Chanchal K. and Cordy, James R.},
title = {NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible Pretty-Printing and Code Normalization},
year = {2008},
isbn = {9780769531762},
publisher = {IEEE Computer Society},
address = {USA},
url = {https://doi.org/10.1109/ICPC.2008.41},
doi = {10.1109/ICPC.2008.41},
abstract = {This paper examines the effectiveness of a new language-specific parser-based but lightweight clone detection approach. Exploiting a novel application of a source transformation system, the method accurately finds near-miss clones using an efficient text line comparison technique. The transformation system assists the methodin three ways. First, using agile parsing it provides user-specified flexible pretty-printing to remove noise, standardize formatting and break program statements into parts such that potential changes can be detected as simple linewise text differences. Second, it provides efficient flexible extraction of potential clones to be compared using island grammars and agile parsing to select granularities and enumerate potential clones. Third, using transformation rules it provides flexible code normalization to allow for local editing differences between similar code segments and filtering out of uninteresting parts of potential clones. In this paper we introduce the theory and practice of the framework and demonstrate its use in finding function clones in C code. Early experiments indicate that the method is capable of finding near-miss clones with high precision and recall, and with reasonable performance.},
booktitle = {Proceedings of the 2008 The 16th IEEE International Conference on Program Comprehension},
pages = {172–181},
keywords = {Clone Detection, Flexible Code Filtering, Flexible Code Normalization, Flexible Pretty-Printing, Near-Miss Intentional Clones},
series = {ICPC '08}
}

@INPROCEEDINGS{tokenexample,
  author={Han, Lifang and Cui, Baojiang and Zhang, Ru and Li, Zhongxian and Wang, Jianxin and Hao, Yongle},
  booktitle={2010 International Conference on Multimedia Information Networking and Security}, 
  title={Type Redefinition Plagiarism Detection of Token-Based Comparison}, 
  year={2010},
  volume={},
  number={},
  pages={351-355},
  keywords={Plagiarism;Cloning;Accuracy;Software algorithms;Algorithm design and analysis;Open source software;homologous software;Token;type redefinition},
  doi={10.1109/MINES.2010.80}
 }

@book{compiler,
  author={AHO, A.V.; SETHI, R. and ULLMAN, J.D},
  title={ Compilers, Principles, Techniques, and Tools},
  publisher={Addison-Wesley Pub. Company},
  year={1986},
}

@INPROCEEDINGS{treeexample,
  author={Chilowicz, Michel and Duris, Etienne and Roussel, Gilles},
  booktitle={2009 IEEE 17th International Conference on Program Comprehension},
  title={Syntax tree fingerprinting for source code similarity detection},
  year={2009},
  volume={},
  number={},
  pages={243-247},
  keywords={Fingerprint recognition;Cloning;Databases;Plagiarism;Software maintenance;Scalability;Pattern analysis;Indexes;Information retrieval;Pattern matching},
  doi={10.1109/ICPC.2009.5090050}
 }

@misc{wordtovec,
      title={Efficient Estimation of Word Representations in Vector Space}, 
      author={Tomas Mikolov and Kai Chen and Greg Corrado and Jeffrey Dean},
      year={2013},
      eprint={1301.3781},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@inproceedings{metricexample,
author = {Choi, Eunjong and Yoshida, Norihiro and Ishio, Takashi and Inoue, Katsuro and Sano, Tateki},
title = {Extracting code clones for refactoring using combinations of clone metrics},
year = {2011},
isbn = {9781450305884},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1985404.1985407},
doi = {10.1145/1985404.1985407},
abstract = {Code clone detection tools may report a large number of code clones, while software developers are interested in only a subset of code clones that are relevant to software development tasks such as refactoring. Our research group has supported many software developers with the code clone detection tool CCFinder and its GUI front-end Gemini. Gemini shows clone sets (i.e., a set of code clones identical or similar to each other) with several clone metrics including their length and the number of code clones; however, it is not clear how to use those metrics to extract interesting code clones for developers. In this paper, we propose a method combining clone metrics to extract code clones for refactoring activity. We have conducted an empirical study on a web application developed by a Japanese software company. The result indicates that combinations of simple clone metric is more effective to extract refactoring candidates in detected code clones than individual clone metric.},
booktitle = {Proceedings of the 5th International Workshop on Software Clones},
pages = {7–13},
keywords = {code clone, industrial case study, refactoring},
location = {Waikiki, Honolulu, HI, USA},
series = {IWSC '11}
}

@article{prodg,
author = {Ferrante, Jeanne and Ottenstein, Karl J. and Warren, Joe D.},
title = {The program dependence graph and its use in optimization},
year = {1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/24039.24041},
doi = {10.1145/24039.24041},
abstract = {In this paper we present an intermediate program representation, called the program dependence graph (PDG), that makes explicit both the data and control dependences for each operation in a program. Data dependences have been used to represent only the relevant data flow relationships of a program. Control dependences are introduced to analogously represent only the essential control flow relationships of a program. Control dependences are derived from the usual control flow graph. Many traditional optimizations operate more efficiently on the PDG. Since dependences in the PDG connect computationally related parts of the program, a single walk of these dependences is sufficient to perform many optimizations. The PDG allows transformations such as vectorization, that previously required special treatment of control dependence, to be performed in a manner that is uniform for both control and data dependences. Program transformations that require interaction of the two dependence types can also be easily handled with our representation. As an example, an incremental approach to modifying data dependences resulting from branch deletion or loop unrolling is introduced. The PDG supports incremental optimization, permitting transformations to be triggered by one another and applied only to affected dependences.},
journal = {ACM Trans. Program. Lang. Syst.},
month = {jul},
pages = {319–349},
}

@INPROCEEDINGS{tailor,
  author={Liu, Jiahao and Zeng, Jun and Wang, Xiang and Liang, Zhenkai},
  booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)},
  title={Learning Graph-based Code Representations for Source-level Functional Similarity Detection},
  year={2023},
  volume={},
  number={},
  pages={345-357},
  keywords={Representation learning;Codes;Source coding;Semantics;Cloning;Syntactics;Graph neural networks},
  doi={10.1109/ICSE48619.2023.00040}}

@INPROCEEDINGS{bigfail,
  author={Krinke, Jens and Ragkhitwetsagul, Chaiyong},
  booktitle={2022 IEEE 16th International Workshop on Software Clones (IWSC)}, 
  title={BigCloneBench Considered Harmful for Machine Learning}, 
  year={2022},
  volume={},
  number={},
  pages={1-7},
  keywords={Codes;Conferences;Cloning;Machine learning;Manuals;Detectors;Benchmark testing;clone detection;code similarity;machine learning},
  doi={10.1109/IWSC55060.2022.00008}}

@misc{ojclone,
      title={Convolutional Neural Networks over Tree Structures for Programming Language Processing}, 
      author={Lili Mou and Ge Li and Lu Zhang and Tao Wang and Zhi Jin},
      year={2015},
      eprint={1409.5718},
      archivePrefix={arXiv},
      primaryClass={cs.LG}
}

@INPROCEEDINGS{bigclonebench,
  author={Svajlenko, Jeffrey and Islam, Judith F. and Keivanloo, Iman and Roy, Chanchal K. and Mia, Mohammad Mamun},
  booktitle={2014 IEEE International Conference on Software Maintenance and Evolution},
  title={Towards a Big Data Curated Benchmark of Inter-project Code Clones},
  year={2014},
  volume={},
  number={},
  pages={476-480},
  keywords={Cloning;Benchmark testing;Tagging;Detectors;Big data;Java;Manuals;big data;benchmark;clone detection;clone search;Big Clone Bench;syntactic similarity;semantic similarity;recall;precision},
  doi={10.1109/ICSME.2014.77}}


@misc{bertsimilar,
      title={Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks},
      author={Nils Reimers and Iryna Gurevych},
      year={2019},
      eprint={1908.10084},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@misc{llmsimilar,
      title={How Contextual are Contextualized Word Representations? Comparing the Geometry of BERT, ELMo, and GPT-2 Embeddings},
      author={Kawin Ethayarajh},
      year={2019},
      eprint={1909.00512},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@book{gensimlivro,
  title={Natural Language Processing and Computational Linguistics: A practical guide to text analysis with Python, Gensim, spaCy, and Keras},
  author={Srinivasa-Desikan, Bhargav},
  year={2018},
  publisher={Packt Publishing Ltd}
}

@INPROCEEDINGS{cosineref,
  author={Madylova, Ainura and Oguducu, Sule Gunduz},
  booktitle={2009 24th International Symposium on Computer and Information Sciences},
  title={A taxonomy based semantic similarity of documents using the cosine measure},
  year={2009},
  volume={},
  number={},
  pages={129-134},
  keywords={Taxonomy;Search engines;Frequency;Recommender systems;Computational complexity;Testing;Web sites;World Wide Web;Internet;Information retrieval},
  doi={10.1109/ISCIS.2009.5291865}}

@article{gensim,
  title={Gensim—statistical semantics in python},
  author={{\v{R}}ehi\u{u}{\v{r}}ek, Radim and Sojka, Petr and others},
  journal={Retrieved from genism. org},
  year={2011},
  publisher={Citeseer}
}

@online{gensimsite,
 author  = {{\v{R}}eh\u{u}{\v{r}}ek},
 title   = {Gensim: Topic modelling for humans},
 year    = {2009},
 url     = {https://radimrehurek.com/gensim/},
 urldate = {2024-06-07},
}

@INPROCEEDINGS{melissa,
	author = {WEN, Melissa Shihfan Ribeiro},
	title = {What happens when the bazaar grows: a comprehensive study on the contemporary Linux kernel development model},
	year = {2021},
	urldate = {2024-06-11},
	doi= {10.11606/D.45.2021.tde-07092021-041136},
	publisher = {São Paulo : Instituto de Matemática e Estatística, Universidade de São Paulo}
}

@book{linuxbook,
  title={Understanding the Linux Kernel: from I/O ports to process management},
  author={Bovet, Daniel P and Cesati, Marco},
  year={2005},
  publisher={" O'Reilly Media, Inc."}
}

@book{gnuref,
  title={Descobrindo o Linux-3{\textordfeminine} Edi{\c{c}}{\~a}o: Entenda o sistema operacional GNU/Linux},
  author={Mota Filho, Jo{\~a}o Eriberto},
  year={2012},
  publisher={Novatec Editora}
}
